plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'org.sonarqube' // added for sonarQube
    id 'org.jetbrains.kotlinx.kover'
    id 'de.mannodermaus.android-junit5'
}

android {
    compileSdk 32
    useLibrary 'android.test.mock'
    defaultConfig {

        testInstrumentationRunnerArguments runnerBuilder: 'de.mannodermaus.junit5.AndroidJUnit5Builder'
        applicationId "com.uqam.mentallys"
        minSdk 24
        targetSdk 31
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("String","END_POINT_URL", END_POINT_URL)
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/license'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice'
        exclude 'META-INF/ASL2.0'
        exclude("META-INF/*.md")
        exclude("META-INF/*.txt")
        exclude("META-INF/*.kotlin_module")
    }
    lint {
        baseline = file("lint-baseline.xml")
    }
    lintOptions {
        checkReleaseBuilds false
    }

    buildFeatures {
        viewBinding true
    }

    flavorDimensions "default"
    productFlavors {
        dev {
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }

        qa {
            applicationIdSuffix ".qa"
            versionNameSuffix "-qa"
        }

        prod {
            applicationIdSuffix ""
            versionNameSuffix ""
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.includeAndroidResources = true
        unitTests.all {
            useJUnitPlatform()
            if (it.name == "testDevDebugUnitTest") {
                kover {
                    enabled = true
                }
            } else {
                kover {
                    enabled = false
                }
            }
        }
    }
    sourceSets {
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
        main {
            java {
                srcDirs 'src\\main\\java', 'src\\main\\java\\model\\chat'
            }
        }
    }
    buildToolsVersion '32.1.0-rc1'
}

def lifecycleVersion = '2.5.0'
def coroutinesVersion = '1.5.2'
def retrofitVersion = '2.9.0'

// added for sonarQube
sonarqube {
    properties {
        property "sonar.projectName", "Mentallys"
        property "sonar.projectKey", "Mentallys"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "java"
        property "sonar.sources", "src/main/java"
        property "sonar.java.sources", "src/main/java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.login", "admin"
        property "sonar.password", "password"
    }
}

dependencies {

    implementation project(":ChatView")

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'

    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    //implementation 'com.google.android:flexbox:0.2.1@aar'


    // Navigation Component Dependencies
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation "androidx.fragment:fragment-ktx:1.5.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.5.1"

    // Lifecycle + ViewModel & LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"

    // Material
    implementation "com.google.android.material:material:1.7.0-alpha03"

    //Viewpager
    implementation "androidx.viewpager:viewpager:1.1.0-alpha01"

    // Hilt-Dagger
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.databinding:databinding-runtime:7.2.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'com.github.siyamed:android-shape-imageview:0.9.3'
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Retrofit

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.google.code.gson:gson:2.6.2"

    // To use Kotlin annotation processing tool (kapt)
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"

    // ViewPager2
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation 'me.relex:circleindicator:2.1.6'

    // Maps
    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    implementation 'com.google.android.gms:play-services-location:20.0.0'
    implementation 'com.google.maps.android:android-maps-utils:2.3.0'
    implementation platform('com.google.firebase:firebase-bom:30.2.0')


    // Image caching
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'com.github.bumptech.glide:compiler:4.13.2'


    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.0"

    // define a BOM and its version
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))

    // define any required OkHttp artifacts without version
    implementation("com.squareup.okhttp3:okhttp")
    implementation("com.squareup.okhttp3:logging-interceptor")

    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation "androidx.annotation:annotation:1.4.0"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Testing
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "app.cash.turbine:turbine:0.7.0"
    implementation "androidx.test:core:1.4.0"
    testImplementation "org.junit.jupiter:junit-jupiter:5.8.2"
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.3.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.3.0"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.3.0"
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation 'org.mockito:mockito-core:3.8.0'
    androidTestImplementation 'org.mockito:mockito-android:3.8.0'
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Communication Services dependencies
    implementation 'com.azure.android:azure-communication-common:1.0.2'
    implementation 'com.azure.android:azure-communication-chat:1.0.2'
    implementation 'org.slf4j:slf4j-log4j12:1.7.29'

    implementation 'com.github.kittinunf.fuel:fuel:2.3.1'

}

tasks.koverMergedHtmlReport {
    htmlReportDir.set(layout.buildDirectory.dir("reports/kover/mentallys-html/"))

    includes = ["com.uqam.mentallys.*"]            // inclusion rules for classes
    excludes = ["dagger.*", "hilt_aggregated_deps.*", "com.uqam.mentallys.*.*_Factory", "com.uqam.mentallys.*.*_Impl", "com.uqam.mentallys.BuildConfig", "com.uqam.mentallys.*.*JsonAdapter"]
    // exclusion rules for classes
}

tasks.koverMergedXmlReport {
    xmlReportFile.set(layout.buildDirectory.file("reports/kover/mentallys-xml/report.xml"))

    includes = ["com.uqam.mentallys.*"]            // inclusion rules for classes
    excludes = ["dagger.*", "hilt_aggregated_deps.*", "com.uqam.mentallys.*.*_Factory", "com.uqam.mentallys.*.*_Impl", "com.uqam.mentallys.BuildConfig", "com.uqam.mentallys.*.*JsonAdapter"]
    // exclusion rules for classes
}

